{
  "meta": {
    "project": "Swagat Odisha",
    "date": "2025-09-09",
    "prepared_by": "Generated by Software Development Manager"
  },
  "product_overview": "Swagat Odisha is a comprehensive education and administration platform designed to streamline student management, user authentication, document handling, and administrative oversight. It supports role-based access with specialized dashboards for students, agents, staff, and administrators, incorporating robust security and performance monitoring tools to ensure a seamless and secure user experience.",
  "core_goals": [
    "Provide secure JWT-based user authentication with role-based access control for different user types (students, agents, staff, super admins).",
    "Manage student profiles comprehensively, including admissions, academic tracking, and referral systems.",
    "Enable detailed dashboards tailored to user roles to view statistics, manage data, and perform relevant tasks efficiently.",
    "Offer document management capabilities with file uploads, PDF processing, and cloud storage integration.",
    "Facilitate administrative tasks with user management, system monitoring, and security auditing.",
    "Implement performance monitoring, caching, and health checks to maintain system reliability and responsiveness.",
    "Support communication through contact forms and notifications to enhance stakeholder engagement.",
    "Ensure comprehensive system security with rate limiting, CORS, input validation, and security audits."
  ],
  "key_features": [
    "User Authentication System with JWT tokens, secure password hashing, and role-based access control.",
    "Student Management System for creating, retrieving, and managing student profiles and academic data.",
    "Role-based Dashboard System for students, agents, staff, and super admins providing customized statistics and management interfaces.",
    "Document Management System enabling secure file upload, PDF processing, and Cloudinary integration for media storage.",
    "Admin Management System offering user management, system settings, and administrative monitoring tools.",
    "Performance Monitoring System tracking API response times, health status, and enabling caching.",
    "Contact and Communication System with a contact form API for collecting user inquiries and sending notifications.",
    "Security and Rate Limiting System implementing CORS, Helmet security headers, input validation, and security audit logs."
  ],
  "user_flow_summary": [
    "User Registration and Login: Users register via the registration form providing details like name, email, role, and password, then log in securely to access their role-specific dashboards.",
    "Dashboard Navigation: Upon login, users are directed to their respective dashboards (Student, Agent, Staff, Super Admin) where they can access relevant features and statistics.",
    "Student Profile Management: Authorized users can create and update student profiles, track academic progress, and manage referrals via the student management interface.",
    "Document Upload and Management: Users with upload permissions can submit documents through the document management UI, which processes files, extracts PDF data if applicable, and stores them securely.",
    "Administrative Operations: Admins use the admin panel to manage users, oversee system settings, monitor security audits, and review dashboard statistics.",
    "Contact Form Submission: Visitors or authenticated users submit queries through the contact form, which triggers backend email notifications.",
    "Performance and Security Monitoring: The system continuously monitors performance metrics and security, with alerts and logs accessible to admins for review and maintenance."
  ],
  "validation_criteria": [
    "Authentication endpoints must enforce JWT validation, proper error handling, and prevent unauthorized access.",
    "Student management APIs should validate all inputs and support complete CRUD operations with appropriate HTTP status responses.",
    "Dashboards must render data accurately per user role and update dynamically based on user interactions.",
    "Document uploads need strict file type and size validation, and PDF processing must extract and store data correctly.",
    "Administrative actions require elevated permissions, with full audit trails for security and compliance.",
    "Performance endpoints must return real-time metrics with response times under defined thresholds.",
    "Contact form submissions should be validated for required fields and trigger email notifications reliably.",
    "Security features such as rate limiting, CORS configuration, Helmet headers, and input sanitization must be consistently enforced to protect against common web vulnerabilities."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "Node.js",
      "Express.js",
      "React",
      "Vite",
      "MongoDB",
      "Mongoose",
      "JWT",
      "Socket.IO",
      "Tailwind CSS",
      "Framer Motion",
      "SweetAlert2",
      "Multer",
      "Cloudinary",
      "bcryptjs",
      "CORS",
      "Helmet",
      "Rate Limiting"
    ],
    "features": [
      {
        "name": "User Authentication System",
        "description": "Complete authentication system with JWT tokens, role-based access control, and secure password handling",
        "files": [
          "backend/routes/auth.js",
          "backend/middleware/auth.js",
          "backend/models/User.js",
          "backend/models/Admin.js",
          "frontend/src/contexts/AuthContext.jsx",
          "frontend/src/components/auth/Login.jsx",
          "frontend/src/components/auth/Register.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Authentication API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/auth/register": {
              "post": {
                "summary": "Register new user",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "fullName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "password": {
                            "type": "string"
                          },
                          "phoneNumber": {
                            "type": "string"
                          },
                          "guardianName": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string",
                            "enum": [
                              "student",
                              "agent",
                              "staff",
                              "super_admin"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "User created successfully"
                  },
                  "400": {
                    "description": "Validation error"
                  },
                  "409": {
                    "description": "User already exists"
                  }
                }
              }
            },
            "/api/auth/login": {
              "post": {
                "summary": "User login",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Login successful"
                  },
                  "400": {
                    "description": "Missing fields"
                  },
                  "401": {
                    "description": "Invalid credentials"
                  }
                }
              }
            },
            "/api/auth/me": {
              "get": {
                "summary": "Get current user",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "User data"
                  },
                  "401": {
                    "description": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Student Management System",
        "description": "Complete student management with profiles, admissions, and academic tracking",
        "files": [
          "backend/routes/students.js",
          "backend/models/Student.js",
          "backend/controllers/adminController.js",
          "frontend/src/components/dashboard/StudentDashboard.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Student Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/students": {
              "get": {
                "summary": "Get all students",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of students"
                  }
                }
              },
              "post": {
                "summary": "Create new student",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "fullName": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "course": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "class": {
                            "type": "string"
                          },
                          "dob": {
                            "type": "string",
                            "format": "date"
                          },
                          "referralCode": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "201": {
                    "description": "Student created"
                  },
                  "400": {
                    "description": "Validation error"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Dashboard System",
        "description": "Role-based dashboards for different user types with statistics and management features",
        "files": [
          "backend/routes/dashboard.js",
          "backend/controllers/dashboardController.js",
          "frontend/src/components/dashboard/StudentDashboard.jsx",
          "frontend/src/components/dashboard/AgentDashboard.jsx",
          "frontend/src/components/dashboard/StaffDashboard.jsx",
          "frontend/src/components/dashboard/SuperAdminDashboard.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Dashboard API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/dashboard/student": {
              "get": {
                "summary": "Get student dashboard data",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Student dashboard data"
                  }
                }
              }
            },
            "/api/dashboard/agents/dashboard": {
              "get": {
                "summary": "Get agent dashboard data",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Agent dashboard data"
                  }
                }
              }
            },
            "/api/dashboard/staff/dashboard": {
              "get": {
                "summary": "Get staff dashboard data",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Staff dashboard data"
                  }
                }
              }
            },
            "/api/dashboard/super-admin": {
              "get": {
                "summary": "Get super admin dashboard data",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Super admin dashboard data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Document Management System",
        "description": "File upload, processing, and management system with PDF processing capabilities",
        "files": [
          "backend/routes/documents.js",
          "backend/utils/pdfProcessor.js",
          "backend/utils/cloudinary.js",
          "frontend/src/components/documents/DocumentManagement.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Document Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/documents/upload": {
              "post": {
                "summary": "Upload document",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "requestBody": {
                  "required": true,
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "file": {
                            "type": "string",
                            "format": "binary"
                          },
                          "type": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Document uploaded successfully"
                  },
                  "400": {
                    "description": "Invalid file or missing data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Admin Management System",
        "description": "Complete admin panel for user management, system settings, and monitoring",
        "files": [
          "backend/routes/admin.js",
          "backend/controllers/adminController.js",
          "frontend/src/components/admin/UserManagement.jsx",
          "frontend/src/components/admin/SecurityDashboard.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Admin Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/admin/dashboard/stats": {
              "get": {
                "summary": "Get admin dashboard statistics",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Dashboard statistics"
                  }
                }
              }
            },
            "/api/admin/students": {
              "get": {
                "summary": "Get all students for admin",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of students"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Performance Monitoring System",
        "description": "System performance monitoring, caching, and health checks",
        "files": [
          "backend/routes/performance.js",
          "backend/utils/performance.js",
          "backend/utils/cache.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Performance Monitoring API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/performance/metrics": {
              "get": {
                "summary": "Get performance metrics",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Performance metrics data"
                  }
                }
              }
            },
            "/api/performance/health": {
              "get": {
                "summary": "Get performance health status",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Health status"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Contact and Communication System",
        "description": "Contact form handling, email notifications, and communication features",
        "files": [
          "backend/routes/contact.js",
          "frontend/src/components/ContactPage.jsx",
          "frontend/src/components/ContactUs.jsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Contact API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/contact": {
              "post": {
                "summary": "Submit contact form",
                "requestBody": {
                  "required": true,
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "subject": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Contact form submitted successfully"
                  },
                  "400": {
                    "description": "Validation error"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Security and Rate Limiting System",
        "description": "Comprehensive security features including rate limiting, CORS, input validation, and security monitoring",
        "files": [
          "backend/middleware/security.js",
          "backend/routes/security.js",
          "backend/utils/securityAudit.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Security API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/security/audit": {
              "get": {
                "summary": "Get security audit logs",
                "security": [
                  {
                    "bearerAuth": []
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Security audit data"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
